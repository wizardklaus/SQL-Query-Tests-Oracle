-- SYS --
DROP USER MCOM;

CREATE USER MCOM IDENTIFIED BY mcom
DEFAULT TABLESPACE users
TEMPORARY TABLESPACE temp;

GRANT CONNECT, RESOURCE, CREATE SESSION, CREATE VIEW TO MCOM;

-- MCOM --
CREATE TABLE DEPARTMENT (
   DEPTNO     NUMBER    NOT NULL,
   DEPTNAME   CHAR(10),
   FLOOR      NUMBER,
   PRIMARY KEY(DEPTNO));


CREATE TABLE EMPLOYEE (
   EMPNO      NUMBER    NOT NULL,
   EMPNAME    CHAR(10)  UNIQUE,
   TITLE      CHAR(10),
   MANAGER    NUMBER,
   SALARY     NUMBER,
   HIREDATE   DATE,
   DNO        NUMBER,
   PRIMARY KEY(EMPNO),
   FOREIGN KEY (MANAGER) REFERENCES EMPLOYEE(EMPNO),
   FOREIGN KEY (DNO) REFERENCES DEPARTMENT(DEPTNO));


INSERT INTO DEPARTMENT VALUES(1, '영업', 8);
INSERT INTO DEPARTMENT VALUES(2, '기획', 10);
INSERT INTO DEPARTMENT VALUES(3, '개발', 9);
INSERT INTO DEPARTMENT VALUES(4, '총무', 7);


INSERT INTO EMPLOYEE VALUES(4377, '이성래', '사장', NULL, 5000000, '1996-01-05', 2);
INSERT INTO EMPLOYEE VALUES(1234, '장건호', '부장', 4377, 4200000, '1996-11-23', 1);
INSERT INTO EMPLOYEE VALUES(3426, '박영권', '과장', 1234, 3000000, '1998-07-20', 1);
INSERT INTO EMPLOYEE VALUES(1365, '김상원', '사원', 3426, 1500000, '2004-02-26', 1);
INSERT INTO EMPLOYEE VALUES(1099, '이재원', '사원', 3426, 1800000, '2003-12-21', 1);
INSERT INTO EMPLOYEE VALUES(3011, '이수민', '부장', 4377, 4300000, '1996-04-30', 3);
INSERT INTO EMPLOYEE VALUES(2468, '조범수', '과장', 3011, 3500000, '1998-12-17', 3);
INSERT INTO EMPLOYEE VALUES(2544, '오준석', '대리', 2468, 2700000, '2002-08-25', 3);
INSERT INTO EMPLOYEE VALUES(1003, '조민희', '대리', 2468, 2600000, '2001-02-19', 2);
INSERT INTO EMPLOYEE VALUES(3427, '최종철', '사원', 1003, 1500000, '2005-10-28', 3);
INSERT INTO EMPLOYEE VALUES(3228, '김주훈', '부장', 4377, 4000000, '1997-03-06', 2);
INSERT INTO EMPLOYEE VALUES(2106, '김창섭', '대리', 3228, 2500000, '2003-03-05', 2);

COMMIT;

SELECT *
FROM EMPLOYEE;

SELECT DNO, AVG(SALARY) AS AVGSAL, MAX(SALARY) AS MAXSAL
FROM EMPLOYEE
GROUP BY DNO
HAVING AVG(SALARY)>=3000000;

SELECT EMPNAME, DEPTNAME
FROM EMPLOYEE E, DEPARTMENT D
WHERE E.DNO = D.DEPTNO;

SELECT E.EMPNAME AS "사원이름", M.EMPNAME AS "매니저이름"
FROM EMPLOYEE E, EMPLOYEE M
WHERE E.MANAGER = M.EMPNO;

SELECT * FROM EMPLOYEE
WHERE MANAGER IS NULL; -- IS NULL을 사용하여 NULL이 있는지 검사가 가능하다.

SELECT EMPNAME, TITLE
FROM EMPLOYEE
WHERE TITLE = 
(SELECT TITLE
 FROM EMPLOYEE
 WHERE EMPNAME = '박영권');
-- 중첩질의 사용, SUB QUERY
-- 서브쿼리를 사용하지 않으려면 셀프조인을 이용하여야 한다.

SELECT E.EMPNAME, E.TITLE
FROM EMPLOYEE E, EMPLOYEE P -- 셀프조인
WHERE P.EMPNAME = '박영권' AND P.TITLE = E.TITLE;

SELECT EMPNAME
FROM EMPLOYEE
WHERE DNO IN
(SELECT DEPTNO
 FROM DEPARTMENT
 WHERE DEPTNAME = '개발' OR DEPTNAME = '영업');
-- INNER QUERY 사용

SELECT EMPNAME
FROM EMPLOYEE E, DEPARTMENT D
WHERE E.DNO = D.DEPTNO AND D.DEPTNAME IN ('개발','영업');
-- INNER QUERY 미사용

SELECT EMPNAME
FROM EMPLOYEE E
WHERE EXISTS
(SELECT *
 FROM DEPARTMENT D
 WHERE E.DNO = D.DEPTNO
 AND (DEPTNAME = '영업' OR DEPTNAME = '개발'));

SELECT EMPNAME, DNO, SALARY
FROM EMPLOYEE E
WHERE SALARY >
(SELECT AVG(SALARY)
 FROM EMPLOYEE P
 WHERE P.DNO = E.DNO);
 
-- BCOM --
-- 이름이 John B Smith인 사원의 생년월일과 주소를 검색하라.
SELECT BDATE, ADDRESS FROM EMPLOYEE WHERE FNAME = 'John' AND MINIT = 'B' AND LNAME = 'Smith';

-- Research 부서에 근무하는 모든 사원들의 이름(FANME,LNAME)과 주소를 검색하라.
SELECT FNAME, LNAME, ADDRESS FROM EMPLOYEE E INNER JOIN DEPARTMENT D ON (D.DNUMBER = E.DNO)
WHERE DNUMBER = 5;

-- Stafford에 위치한 모든 프로젝트에 대해서 프로젝트 번호, 담당 부서 번호, 부서관리자의 성, 주소, 생년월일을 검색하라.
SELECT P.PNUMBER, P.DNUM, E.LNAME, E.ADDRESS, E.BDATE
FROM EMPLOYEE E INNER JOIN DEPARTMENT D ON (E.DNO = D.DNUMBER) 
INNER JOIN DEPT_LOCATIONS L ON (L.DNUMBER = D.DNUMBER)
INNER JOIN PROJECT P ON (P.DNUM = L.DNUMBER)
WHERE PLOCATION = 'Stafford';

-- 4번 부서가 담당하는 프로젝트를 수행하는 사원들의 이름을 검색하라
SELECT E.FNAME, E.LNAME
FROM EMPLOYEE E INNER JOIN DEPARTMENT D ON (E.DNO = D.DNUMBER)
WHERE D.DNUMBER = 4;

-- 4번 부서가 담당하는 프로젝트를 모두 수행하는 사원들의 이름들을 검색하라
SELECT E.FNAME
FROM EMPLOYEE E INNER JOIN DEPARTMENT D ON (E.DNO = D.DNUMBER)
INNER JOIN PROJECT P ON (D.DNUMBER = P.DNUM)
WHERE P.PNAME = 'Computerization' AND P.PNAME = 'Newbenefits';

SELECT E.FNAME
FROM EMPLOYEE E INNER JOIN WORKS_ON W ON E.SSN = W.ESSN
WHERE PNO =ALL (SELECT PNUMBER FROM PROJECT WHERE DNUM = 4);
-- 풀이, WORKS_ON으로가면 PNO를 검색하여 사원들을 끌어내고, 교집합을 발견한다.
-- NOT EXISTS (S2 - S1) 교수님 방법